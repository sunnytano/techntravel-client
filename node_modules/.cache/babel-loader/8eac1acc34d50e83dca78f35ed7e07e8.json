{"ast":null,"code":"import _objectSpread from \"/Users/stan-0/Desktop/personal projects/traveler/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst defaultState = {\n  news: [],\n  input: \"\",\n  likes: 0 // reducer: is used to control changes to state\n  // whatever is returned from the reducer becomes state\n  // type is used to determine what to do in reducer\n  // payload is used to determine what new data needs to be used to change state\n  // function NewsReducer(state=defaultState, action){\n  //     // console.log(\"STATE in reducer\", state)\n  //     // console.log(\"ACTION in reducer\", action)\n  //     switch(action.type){ //action.type is really just a string and MUST be called type\n  //         case \"CHANGE_LOADING\":\n  //             return {...state, loading: false} // making a copy, using spread operator to preserve old state but only changing what we want to change\n  //         case \"ADD_CATEGORY\":\n  //             return {...state, news: [...state.news, action.payload]} //using spread operator here bc adding to the array\n  //         case \"ADD_TO_FAVORITES\":\n  //             return {...state, favorites: [...state.favorites, action.payload]} //using spread operator here bc adding to the array        \n  //         case \"SET_NEWS\":\n  //             return {...state, selectNews: action.payload}\n  //         case \"CHANGE_FILTER\":\n  //             return {...state, filter: action.payload} // do not need spread operator bc only changing state, not adding to it\n  //         default:\n  //             return state //whatever is returned from the reducer becomes state, its like setting state\n  //     }\n  // }\n\n};\n\nfunction NewsReducer(state = defaultState, action) {\n  switch (action.type) {\n    case \"FETCH_NEWS\":\n      return _objectSpread({}, state, {\n        news: action.payload\n      });\n\n    case \"FETCH_NEWS\":\n      return _objectSpread({}, state, {\n        news: action.payload\n      });\n\n    case \"ADD_LIKES\":\n      return _objectSpread({}, state, {\n        likes: state.likes + 1\n      });\n\n    case \"CHANGE_INPUT\":\n      return _objectSpread({}, state, {\n        input: action.payload\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default NewsReducer;","map":{"version":3,"sources":["/Users/stan-0/Desktop/personal projects/traveler/frontend/src/reducers/NewsReducer.js"],"names":["defaultState","news","input","likes","NewsReducer","state","action","type","payload"],"mappings":";AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,KAAK,EAAE,CAHU,CAMrB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA5BqB,CAArB;;AA8BA,SAASC,WAAT,CAAqBC,KAAK,GAACL,YAA3B,EAAyCM,MAAzC,EAAgD;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,YAAL;AACI,+BAAWF,KAAX;AAAkBJ,QAAAA,IAAI,EAAEK,MAAM,CAACE;AAA/B;;AACA,SAAK,YAAL;AACI,+BAAWH,KAAX;AAAkBJ,QAAAA,IAAI,EAAEK,MAAM,CAACE;AAA/B;;AAER,SAAK,WAAL;AACI,+BAAWH,KAAX;AAAkBF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAvC;;AACJ,SAAK,cAAL;AACI,+BAAWE,KAAX;AAAkBH,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAAhC;;AACJ;AACI,aAAOH,KAAP;AAXR;AAaH;;AAED,eAAeD,WAAf","sourcesContent":["const defaultState = {\n    news: [], \n    input: \"\", \n    likes: 0\n}\n\n// reducer: is used to control changes to state\n// whatever is returned from the reducer becomes state\n// type is used to determine what to do in reducer\n// payload is used to determine what new data needs to be used to change state\n\n// function NewsReducer(state=defaultState, action){\n//     // console.log(\"STATE in reducer\", state)\n//     // console.log(\"ACTION in reducer\", action)\n//     switch(action.type){ //action.type is really just a string and MUST be called type\n//         case \"CHANGE_LOADING\":\n//             return {...state, loading: false} // making a copy, using spread operator to preserve old state but only changing what we want to change\n//         case \"ADD_CATEGORY\":\n//             return {...state, news: [...state.news, action.payload]} //using spread operator here bc adding to the array\n//         case \"ADD_TO_FAVORITES\":\n//             return {...state, favorites: [...state.favorites, action.payload]} //using spread operator here bc adding to the array        \n//         case \"SET_NEWS\":\n//             return {...state, selectNews: action.payload}\n//         case \"CHANGE_FILTER\":\n//             return {...state, filter: action.payload} // do not need spread operator bc only changing state, not adding to it\n//         default:\n//             return state //whatever is returned from the reducer becomes state, its like setting state\n//     }\n// }\n\nfunction NewsReducer(state=defaultState, action){\n    switch(action.type){\n        case \"FETCH_NEWS\":\n            return {...state, news: action.payload }\n            case \"FETCH_NEWS\":\n                return {...state, news: action.payload }\n    \n        case \"ADD_LIKES\":\n            return {...state, likes: state.likes + 1}\n        case \"CHANGE_INPUT\":\n            return {...state, input: action.payload}\n        default: \n            return state\n    }\n}\n\nexport default NewsReducer\n"]},"metadata":{},"sourceType":"module"}