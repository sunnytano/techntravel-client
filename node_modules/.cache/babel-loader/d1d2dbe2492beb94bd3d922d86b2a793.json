{"ast":null,"code":"const defaultState = {\n  news: [],\n  filter: \"\",\n  loading: true,\n  currentUser: null,\n  favorites: [],\n  selectNews: null // reducer: is used to control changes to state\n  // whatever is returned from the reducer becomes state\n  // type is used to determine what to do in reducer\n  // payload is used to determine what new data needs to be used to change state\n  // function NewsReducer(state=defaultState, action){\n  //     // console.log(\"STATE in reducer\", state)\n  //     // console.log(\"ACTION in reducer\", action)\n  //     switch(action.type){ //action.type is really just a string and MUST be called type\n  //         case \"CHANGE_LOADING\":\n  //             return {...state, loading: false} // making a copy, using spread operator to preserve old state but only changing what we want to change\n  //         case \"ADD_CATEGORY\":\n  //             return {...state, news: [...state.news, action.payload]} //using spread operator here bc adding to the array\n  //         case \"ADD_TO_FAVORITES\":\n  //             return {...state, favorites: [...state.favorites, action.payload]} //using spread operator here bc adding to the array        \n  //         case \"SET_NEWS\":\n  //             return {...state, selectNews: action.payload}\n  //         case \"CHANGE_FILTER\":\n  //             return {...state, filter: action.payload} // do not need spread operator bc only changing state, not adding to it\n  //         default:\n  //             return state //whatever is returned from the reducer becomes state, its like setting state\n  //     }\n  // }\n\n};\nexport default NewsReducer;","map":{"version":3,"sources":["/Users/stan-0/Desktop/personal projects/traveler/src/reducers/NewsReducer.js"],"names":["defaultState","news","filter","loading","currentUser","favorites","selectNews","NewsReducer"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,MAAM,EAAE,EAFS;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,WAAW,EAAE,IAJI;AAKjBC,EAAAA,SAAS,EAAE,EALM;AAMjBC,EAAAA,UAAU,EAAE,IANK,CASrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA9BqB,CAArB;AAkCA,eAAeC,WAAf","sourcesContent":["const defaultState = {\n    news: [], \n    filter: \"\",\n    loading: true, \n    currentUser: null,\n    favorites: [],\n    selectNews: null\n}\n\n// reducer: is used to control changes to state\n// whatever is returned from the reducer becomes state\n// type is used to determine what to do in reducer\n// payload is used to determine what new data needs to be used to change state\n// function NewsReducer(state=defaultState, action){\n//     // console.log(\"STATE in reducer\", state)\n//     // console.log(\"ACTION in reducer\", action)\n//     switch(action.type){ //action.type is really just a string and MUST be called type\n//         case \"CHANGE_LOADING\":\n//             return {...state, loading: false} // making a copy, using spread operator to preserve old state but only changing what we want to change\n//         case \"ADD_CATEGORY\":\n//             return {...state, news: [...state.news, action.payload]} //using spread operator here bc adding to the array\n//         case \"ADD_TO_FAVORITES\":\n//             return {...state, favorites: [...state.favorites, action.payload]} //using spread operator here bc adding to the array        \n//         case \"SET_NEWS\":\n//             return {...state, selectNews: action.payload}\n//         case \"CHANGE_FILTER\":\n//             return {...state, filter: action.payload} // do not need spread operator bc only changing state, not adding to it\n//         default:\n//             return state //whatever is returned from the reducer becomes state, its like setting state\n//     }\n// }\n\n\n\nexport default NewsReducer\n"]},"metadata":{},"sourceType":"module"}