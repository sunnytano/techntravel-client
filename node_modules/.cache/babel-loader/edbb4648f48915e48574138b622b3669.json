{"ast":null,"code":"var _jsxFileName = \"/Users/stan-0/Desktop/personal projects/traveler/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { connect } from 'react-redux'; // higher order component that will add functionality to ur component\n\nimport NewsContainer from './NewsContainer';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleAddFavorite = () => {\n      this.setState({\n        favorites: [...this.props.favorites]\n      });\n    };\n  }\n\n  componentDidMount() {\n    let url = \"http://localhost:3000/articles\";\n    fetch(url).then(resp => resp.json()).then(data => {\n      this.props.setNews(data);\n      this.setState({\n        favorites: data\n      });\n    });\n  }\n\n  render() {\n    // console.log(this.props.news)\n    console.log(\"APP PROPS\", this.props);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(NewsContainer, {\n      addToFav: this.props.addToReduxFav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n} // MSP IS READING TO STATE\n// MSP is how you will read from state; this will give you access to the entire redux state\n// and whatever you return in the MSP function will be added that components props\n// state will be the defaultState in reducer\n// this is how a component will gain access to data that is stored within the redux store\n\n\nfunction mapStateToProps(state) {\n  console.log(state); // MSP must return an object\n  // this obj will be appended to the props of the component\n\n  return {\n    news: state.news // only return the state that you need for this paticular component that will be read as props\n\n  };\n} // MDP IS WRITING TO STATE\n// has access to dispactch so it can write to state\n\n\nfunction mapDispatchToProps(dispatch) {\n  // will return an object\n  // obj will also be appended to props of the component\n  return {\n    addToReduxFav: favObj => {\n      dispatch({\n        type: \"ADD_TO_FAVORITES\",\n        payload: favObj\n      });\n    },\n    setNews: favNews => {\n      dispatch({\n        type: \"SET_NEWS\",\n        payload: news\n      });\n    }\n  };\n} // connect is a higher order function; which is a function that returns a function\n// connect makes 2 calls; whatever connect returns is another function\n// then that returned function is invoked in turn with App as its argument\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/stan-0/Desktop/personal projects/traveler/src/App.js"],"names":["React","connect","NewsContainer","App","Component","handleAddFavorite","setState","favorites","props","componentDidMount","url","fetch","then","resp","json","data","setNews","render","console","log","addToReduxFav","mapStateToProps","state","news","mapDispatchToProps","dispatch","favObj","type","payload","favNews"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAAsC;;AACtC,OAAOC,aAAP,MAA0B,iBAA1B;;AAGA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAEhCC,iBAFgC,GAEZ,MAAM;AACxB,WAAKC,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAE,CAAC,GAAG,KAAKC,KAAL,CAAWD,SAAf;AADC,OAAd;AAGD,KAN+B;AAAA;;AAQhCE,EAAAA,iBAAiB,GAAE;AACjB,QAAIC,GAAG,GAAC,gCAAR;AACCC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACAE,IADA,CACKC,IAAI,IAAEA,IAAI,CAACC,IAAL,EADX,EAEAF,IAFA,CAEKG,IAAI,IAAE;AACV,WAAKP,KAAL,CAAWQ,OAAX,CAAmBD,IAAnB;AACA,WAAKT,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAEQ;AADC,OAAd;AAGD,KAPA;AAQF;;AAEDE,EAAAA,MAAM,GAAE;AACN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKX,KAA9B;AACF,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AACE,MAAA,QAAQ,EAAE,KAAKA,KAAL,CAAWY,aADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAMD;;AA7BiC,C,CAgClC;AACA;AACA;AACA;AACA;;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;AAC7BJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ,EAD6B,CAE7B;AACA;;AACA,SAAO;AACLC,IAAAA,IAAI,EAAED,KAAK,CAACC,IADP,CACY;;AADZ,GAAP;AAGD,C,CAGD;AACA;;;AACA,SAASC,kBAAT,CAA4BC,QAA5B,EAAqC;AACrC;AACA;AACE,SAAO;AACLL,IAAAA,aAAa,EAAGM,MAAD,IAAY;AACzBD,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAE,kBAAP;AAA2BC,QAAAA,OAAO,EAAEF;AAApC,OAAD,CAAR;AACD,KAHI;AAILV,IAAAA,OAAO,EAAGa,OAAD,IAAa;AACpBJ,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAE,UAAP;AAAmBC,QAAAA,OAAO,EAAEL;AAA5B,OAAD,CAAR;AACD;AANI,GAAP;AAQD,C,CAED;AACA;AACA;;;AACA,eAAetB,OAAO,CAACoB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CrB,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { connect } from 'react-redux' // higher order component that will add functionality to ur component\nimport NewsContainer from './NewsContainer';\n\n\nclass App extends React.Component {\n\n  handleAddFavorite = () => {\n    this.setState({\n      favorites: [...this.props.favorites]\n    })\n  }\n\n  componentDidMount(){\n    let url=\"http://localhost:3000/articles\"\n     fetch(url)\n    .then(resp=>resp.json())\n    .then(data=>{\n      this.props.setNews(data)\n      this.setState({\n        favorites: data\n      })\n    })\n  }\n\n  render(){\n    // console.log(this.props.news)\n    console.log(\"APP PROPS\", this.props)\n  return (\n    <div className=\"App\">\n      <NewsContainer \n        addToFav={this.props.addToReduxFav} />\n    </div>\n  );\n}\n}\n\n// MSP IS READING TO STATE\n// MSP is how you will read from state; this will give you access to the entire redux state\n// and whatever you return in the MSP function will be added that components props\n// state will be the defaultState in reducer\n// this is how a component will gain access to data that is stored within the redux store\nfunction mapStateToProps(state){ \n  console.log(state)\n  // MSP must return an object\n  // this obj will be appended to the props of the component\n  return { \n    news: state.news // only return the state that you need for this paticular component that will be read as props\n  }\n}\n\n\n// MDP IS WRITING TO STATE\n// has access to dispactch so it can write to state\nfunction mapDispatchToProps(dispatch){ \n// will return an object\n// obj will also be appended to props of the component\n  return {\n    addToReduxFav: (favObj) => {\n      dispatch({type: \"ADD_TO_FAVORITES\", payload: favObj })\n    }, \n    setNews: (favNews) => {\n      dispatch({type: \"SET_NEWS\", payload: news})\n    }\n  }\n}\n\n// connect is a higher order function; which is a function that returns a function\n// connect makes 2 calls; whatever connect returns is another function\n// then that returned function is invoked in turn with App as its argument\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}