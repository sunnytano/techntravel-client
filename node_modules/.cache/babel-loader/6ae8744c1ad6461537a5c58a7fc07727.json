{"ast":null,"code":"const login = user => ({\n  type: \"LOGIN\",\n  payload: user\n});\n\nconst logout = () => ({\n  type: \"LOGOUT\"\n});\n\nconst signup = user => ({\n  type: \"SIGNUP\",\n  payload: user\n});\n\nconst persist = user => ({\n  type: \"PERSIST\",\n  payload: user\n});\n\nconst persistFromDB = () => dispatch => {\n  const config = {\n    headers: {\n      Authorization: \"bearer \" + localStorage.token\n    }\n  };\n  fetch(\"http://localhost:3010/auth\", config).then(resp => resp.json()).then(user => {\n    dispatch(persist(user));\n  });\n};\n\nconst createUser = user => dispatch => {\n  const config = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  };\n  fetch(\"http://localhost:3010/api/v1/users\", config).then(r => r.json()).then(data => {\n    localStorage.token = data.token;\n    dispatch(signup(data.user));\n  });\n};\n\nconst loginUser = user => dispatch => {\n  const config = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  };\n  fetch(\"http://localhost:3010/api/v1/login\", config).then(resp => resp.json()).then(data => {\n    localStorage.token = data.token;\n    dispatch(login(data.user));\n  });\n};\n\nconst logoutUser = () => dispatch => {\n  localStorage.clear();\n  dispatch(logout());\n};\n\nexport default {\n  loginUser,\n  createUser,\n  persistFromDB,\n  logoutUser\n};","map":{"version":3,"sources":["/Users/stan-0/Desktop/personal projects/traveler/frontend/src/actions/User.js"],"names":["login","user","type","payload","logout","signup","persist","persistFromDB","dispatch","config","headers","Authorization","localStorage","token","fetch","then","resp","json","createUser","method","body","JSON","stringify","r","data","loginUser","logoutUser","clear"],"mappings":"AAAA,MAAMA,KAAK,GAAEC,IAAI,KAAK;AAClBC,EAAAA,IAAI,EAAE,OADY;AAElBC,EAAAA,OAAO,EAAEF;AAFS,CAAL,CAAjB;;AAKA,MAAMG,MAAM,GAAG,OAAO;AAClBF,EAAAA,IAAI,EAAE;AADY,CAAP,CAAf;;AAIA,MAAMG,MAAM,GAAGJ,IAAI,KAAK;AACpBC,EAAAA,IAAI,EAAE,QADc;AAEpBC,EAAAA,OAAO,EAAEF;AAFW,CAAL,CAAnB;;AAKA,MAAMK,OAAO,GAAGL,IAAI,KAAK;AACrBC,EAAAA,IAAI,EAAE,SADe;AAErBC,EAAAA,OAAO,EAAEF;AAFY,CAAL,CAApB;;AAKA,MAAMM,aAAa,GAAG,MAAMC,QAAQ,IAAI;AACpC,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC;AAA1C;AADI,GAAf;AAGAC,EAAAA,KAAK,CAAC,4BAAD,EAA+BL,MAA/B,CAAL,CACGM,IADH,CACQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGF,IAFH,CAEQd,IAAI,IAAI;AACZO,IAAAA,QAAQ,CAACF,OAAO,CAACL,IAAD,CAAR,CAAR;AACD,GAJH;AAKD,CATH;;AAWE,MAAMiB,UAAU,GAAGjB,IAAI,IAAKO,QAAQ,IAAI;AACtC,QAAMC,MAAM,GAAG;AACXU,IAAAA,MAAM,EAAE,MADG;AAEXT,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFE;AAKXU,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAerB,IAAf;AALK,GAAf;AAOAa,EAAAA,KAAK,CAAC,oCAAD,EAAuCL,MAAvC,CAAL,CACCM,IADD,CACMQ,CAAC,IAAIA,CAAC,CAACN,IAAF,EADX,EAECF,IAFD,CAEMS,IAAI,IAAI;AACZZ,IAAAA,YAAY,CAACC,KAAb,GAAqBW,IAAI,CAACX,KAA1B;AACAL,IAAAA,QAAQ,CAACH,MAAM,CAACmB,IAAI,CAACvB,IAAN,CAAP,CAAR;AACD,GALD;AAMH,CAdC;;AAgBF,MAAMwB,SAAS,GAAGxB,IAAI,IAAIO,QAAQ,IAAI;AAClC,QAAMC,MAAM,GAAG;AACXU,IAAAA,MAAM,EAAE,MADG;AAEXT,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFE;AAKXU,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAerB,IAAf;AALK,GAAf;AAOAa,EAAAA,KAAK,CAAC,oCAAD,EAAuCL,MAAvC,CAAL,CACCM,IADD,CACMC,IAAI,IAAEA,IAAI,CAACC,IAAL,EADZ,EAECF,IAFD,CAEMS,IAAI,IAAE;AACRZ,IAAAA,YAAY,CAACC,KAAb,GAAqBW,IAAI,CAACX,KAA1B;AACAL,IAAAA,QAAQ,CAACR,KAAK,CAACwB,IAAI,CAACvB,IAAN,CAAN,CAAR;AACH,GALD;AAMH,CAdD;;AAgBA,MAAMyB,UAAU,GAAG,MAAMlB,QAAQ,IAAI;AACjCI,EAAAA,YAAY,CAACe,KAAb;AACAnB,EAAAA,QAAQ,CAACJ,MAAM,EAAP,CAAR;AACH,CAHD;;AAKA,eAAe;AACXqB,EAAAA,SADW;AAEXP,EAAAA,UAFW;AAGXX,EAAAA,aAHW;AAIXmB,EAAAA;AAJW,CAAf","sourcesContent":["const login= user => ({\n    type: \"LOGIN\", \n    payload: user\n});\n\nconst logout = () => ({\n    type: \"LOGOUT\"\n});\n\nconst signup = user => ({\n    type: \"SIGNUP\",\n    payload: user\n});\n\nconst persist = user => ({\n    type: \"PERSIST\",\n    payload: user\n})\n\nconst persistFromDB = () => dispatch => {\n    const config = {\n      headers: { Authorization: \"bearer \" + localStorage.token }\n    };\n    fetch(\"http://localhost:3010/auth\", config)\n      .then(resp => resp.json())\n      .then(user => {\n        dispatch(persist(user));\n      });\n  };\n\n  const createUser = user =>  dispatch => {\n    const config = {\n        method: \"POST\", \n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n    };\n    fetch(\"http://localhost:3010/api/v1/users\", config)\n    .then(r => r.json())\n    .then(data => {\n      localStorage.token = data.token;\n      dispatch(signup(data.user));\n    });\n};\n\nconst loginUser = user => dispatch => {\n    const config = {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n    };\n    fetch(\"http://localhost:3010/api/v1/login\", config)\n    .then(resp=>resp.json())\n    .then(data=>{\n        localStorage.token = data.token\n        dispatch(login(data.user))\n    })\n}\n  \nconst logoutUser = () => dispatch => {\n    localStorage.clear();\n    dispatch(logout())\n}\n\nexport default {\n    loginUser, \n    createUser,\n    persistFromDB, \n    logoutUser\n}"]},"metadata":{},"sourceType":"module"}