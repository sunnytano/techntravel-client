{"ast":null,"code":"import _objectSpread from \"/Users/stan-0/Desktop/personal projects/traveler/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst defaultState = {\n  news: [],\n  filter: \"\",\n  loading: true,\n  currentUser: null,\n  favorites: [],\n  selectNews: null // reducer: is used to control changes to state\n  // whatever is returned from the reducer becomes state\n  // type is used to determine what to do in reducer\n  // payload is used to determine what new data needs to be used to change state\n\n};\n\nfunction reducer(state = defaultState, action) {\n  // console.log(\"STATE in reducer\", state)\n  // console.log(\"ACTION in reducer\", action)\n  switch (action.type) {\n    //action.type is really just a string and MUST be called type\n    case \"CHANGE_LOADING\":\n      return _objectSpread({}, state, {\n        loading: false // making a copy, using spread operator to preserve old state but only changing what we want to change\n\n      });\n\n    case \"ADD_CATEGORY\":\n      return _objectSpread({}, state, {\n        news: [...state.news, action.payload] //using spread operator here bc adding to the array\n\n      });\n\n    case \"ADD_TO_FAVORITES\":\n      return _objectSpread({}, state, {\n        favorites: [...state.favorites, action.payload] //using spread operator here bc adding to the array        \n\n      });\n\n    case \"SET_NEWS\":\n      return _objectSpread({}, state, {\n        selectNews: action.payload\n      });\n\n    case \"CHANGE_FILTER\":\n      return _objectSpread({}, state, {\n        filter: action.payload // do not need spread operator bc only changing state, not adding to it\n\n      });\n\n    default:\n      return state;\n    //whatever is returned from the reducer becomes state, its like setting state\n  }\n}\n\nexport default educer;","map":{"version":3,"sources":["/Users/stan-0/Desktop/personal projects/traveler/src/NewsReducer.js"],"names":["defaultState","news","filter","loading","currentUser","favorites","selectNews","reducer","state","action","type","payload","educer"],"mappings":";AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,MAAM,EAAE,EAFS;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,WAAW,EAAE,IAJI;AAKjBC,EAAAA,SAAS,EAAE,EALM;AAMjBC,EAAAA,UAAU,EAAE,IANK,CASrB;AACA;AACA;AACA;;AAZqB,CAArB;;AAaA,SAASC,OAAT,CAAiBC,KAAK,GAACR,YAAvB,EAAqCS,MAArC,EAA4C;AACxC;AACA;AACA,UAAOA,MAAM,CAACC,IAAd;AAAqB;AACjB,SAAK,gBAAL;AACI,+BAAWF,KAAX;AAAkBL,QAAAA,OAAO,EAAE,KAA3B,CAAkC;;AAAlC;;AACJ,SAAK,cAAL;AACI,+BAAWK,KAAX;AAAkBP,QAAAA,IAAI,EAAE,CAAC,GAAGO,KAAK,CAACP,IAAV,EAAgBQ,MAAM,CAACE,OAAvB,CAAxB,CAAyD;;AAAzD;;AACJ,SAAK,kBAAL;AACI,+BAAWH,KAAX;AAAkBH,QAAAA,SAAS,EAAE,CAAC,GAAGG,KAAK,CAACH,SAAV,EAAqBI,MAAM,CAACE,OAA5B,CAA7B,CAAmE;;AAAnE;;AACJ,SAAK,UAAL;AACI,+BAAWH,KAAX;AAAkBF,QAAAA,UAAU,EAAEG,MAAM,CAACE;AAArC;;AACJ,SAAK,eAAL;AACI,+BAAWH,KAAX;AAAkBN,QAAAA,MAAM,EAAEO,MAAM,CAACE,OAAjC,CAA0C;;AAA1C;;AACJ;AACI,aAAOH,KAAP;AAAa;AAZrB;AAcH;;AAED,eAAeI,MAAf","sourcesContent":["const defaultState = {\n    news: [], \n    filter: \"\",\n    loading: true, \n    currentUser: null,\n    favorites: [],\n    selectNews: null\n}\n\n// reducer: is used to control changes to state\n// whatever is returned from the reducer becomes state\n// type is used to determine what to do in reducer\n// payload is used to determine what new data needs to be used to change state\nfunction reducer(state=defaultState, action){\n    // console.log(\"STATE in reducer\", state)\n    // console.log(\"ACTION in reducer\", action)\n    switch(action.type){ //action.type is really just a string and MUST be called type\n        case \"CHANGE_LOADING\":\n            return {...state, loading: false} // making a copy, using spread operator to preserve old state but only changing what we want to change\n        case \"ADD_CATEGORY\":\n            return {...state, news: [...state.news, action.payload]} //using spread operator here bc adding to the array\n        case \"ADD_TO_FAVORITES\":\n            return {...state, favorites: [...state.favorites, action.payload]} //using spread operator here bc adding to the array        \n        case \"SET_NEWS\":\n            return {...state, selectNews: action.payload}\n        case \"CHANGE_FILTER\":\n            return {...state, filter: action.payload} // do not need spread operator bc only changing state, not adding to it\n        default:\n            return state //whatever is returned from the reducer becomes state, its like setting state\n    }\n}\n\nexport default educer\n"]},"metadata":{},"sourceType":"module"}